[
    {
        "UpdateStageName": "Create Dotnet Directory",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "CreateDirectory",
        "UpdateSourceArgs": "{{$FullBaseDir}}Dotnet"
    },
    {
        "UpdateStageName": ".NET Runtime Download",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "FetchURL",
        "UpdateSourceData": "https://dotnetcli.azureedge.net/dotnet/Runtime/{{DotnetVersion}}/dotnet-runtime-{{DotnetVersion}}-win-x64.zip",
        "UpdateSourceTarget": "{{$FullBaseDir}}Dotnet",
        "UnzipUpdateSource": true,
        "OverwriteExistingFiles": true,
        "DeleteAfterExtract": true
    },
    {
        "UpdateStageName": ".NET Runtime Download",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "FetchURL",
        "UpdateSourceData": "https://dotnetcli.azureedge.net/dotnet/Runtime/{{DotnetVersion}}/dotnet-runtime-{{DotnetVersion}}-linux-x64.tar.gz",
        "UpdateSourceArch": "x86_64",
        "UpdateSourceTarget": "{{$FullBaseDir}}Dotnet",
        "UnzipUpdateSource": true,
        "OverwriteExistingFiles": true,
        "DeleteAfterExtract": true
    },
    {
        "UpdateStageName": ".NET Runtime Download",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "FetchURL",
        "UpdateSourceData": "https://dotnetcli.azureedge.net/dotnet/Runtime/{{DotnetVersion}}/dotnet-runtime-{{DotnetVersion}}-linux-arm64.tar.gz",
        "UpdateSourceArch": "aarch64",
        "UpdateSourceTarget": "{{$FullBaseDir}}Dotnet",
        "UnzipUpdateSource": true,
        "OverwriteExistingFiles": true,
        "DeleteAfterExtract": true
    },
    {
        "UpdateStageName": "Server Download",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd space-station14/server && download_url=$(wget -qO- https://wizards.cdn.spacestation14.com/fork/wizards/manifest | jq -r \\\".builds | to_entries | sort_by(.value.time) | last | .value.server.\\\\\\\"linux-x64\\\\\\\".url\\\") && wget -q $download_url && unzip -qo SS14.Server_linux-x64.zip && rm -rf SS14.Server_linux-x64.zip && chmod +x Robust.Server\"",
        "UpdateSourceArch": "x86_64",
        "UpdateSourceConditionSetting": "ServerBuild",
        "UpdateSourceConditionValue": "latest"
    },
    {
        "UpdateStageName": "Server Download",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd space-station14/server && download_url=$(wget -qO- https://wizards.cdn.spacestation14.com/fork/wizards/manifest | jq -r \\\".builds | to_entries | sort_by(.value.time) | last | .value.server.\\\\\\\"linux-arm64\\\\\\\".url\\\") && wget -q $download_url && unzip -qo SS14.Server_linux-arm64.zip && rm -rf SS14.Server_linux-arm64.zip && chmod +x Robust.Server\"",
        "UpdateSourceArch": "aarch64",
        "UpdateSourceConditionSetting": "ServerBuild",
        "UpdateSourceConditionValue": "latest"
    },
    {
        "UpdateStageName": "Server Download",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "cmd.exe",
        "UpdateSourceArgs": "/C start /wait powershell.exe -NoProfile -ExecutionPolicy Bypass -WindowStyle Hidden -Command \"cd space-station14/server ; $Manifest = Invoke-WebRequest -UseBasicParsing -Uri 'https://wizards.cdn.spacestation14.com/fork/wizards/manifest' | ConvertFrom-Json ; $SortedBuilds = $Manifest.builds.PSObject.Properties | Sort-Object { $_.Value.time } ; $LastBuild = $SortedBuilds[-1] ; $DownloadUrl = $LastBuild.Value.server.'win-x64'.url ; Invoke-WebRequest -UseBasicParsing -Uri $DownloadUrl -OutFile 'SS14.Server_win-x64.zip' ; Expand-Archive -Path 'SS14.Server_win-x64.zip' -DestinationPath '.' -Force ; Remove-Item 'SS14.Server_win-x64.zip'\"",
        "UpdateSourceConditionSetting": "ServerBuild",
        "UpdateSourceConditionValue": "latest"
    },
    {
        "UpdateStageName": "Server Download",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd space-station14/server && wget -q \\\"https://wizards.cdn.spacestation14.com/fork/wizards/version/{{SpecificBuildVersion}}/file/SS14.Server_linux-x64.zip\\\" && unzip -qo SS14.Server_linux-x64.zip && rm -rf SS14.Server_linux-x64.zip && chmod +x Robust.Server\"",
        "UpdateSourceArch": "x86_64",
        "UpdateSourceConditionSetting": "ServerBuild",
        "UpdateSourceConditionValue": "specificversion"
    },
    {
        "UpdateStageName": "Server Download",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd space-station14/server && wget -q \\\"https://wizards.cdn.spacestation14.com/fork/wizards/version/{{SpecificBuildVersion}}/file/SS14.Server_linux-arm64.zip\\\" && unzip -qo SS14.Server_linux-arm64.zip && rm -rf SS14.Server_linux-arm64.zip && chmod +x Robust.Server\"",
        "UpdateSourceArch": "aarch64",
        "UpdateSourceConditionSetting": "ServerBuild",
        "UpdateSourceConditionValue": "specificversion"
    },
    {
        "UpdateStageName": "Server Download",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "cmd.exe",
        "UpdateSourceArgs": "/C cd space-station14\\server && curl -sLOJ \"https://wizards.cdn.spacestation14.com/fork/wizards/version/{{SpecificBuildVersion}}/file/SS14.Server_win-x64.zip\" && tar -xf SS14.Server_win-x64.zip && del /Q /F SS14.Server_win-x64.zip",
        "UpdateSourceConditionSetting": "ServerBuild",
        "UpdateSourceConditionValue": "specificversion"
    },
    {
        "UpdateStageName": "Config File Download",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "FetchURL",
        "UpdateSourceData": "https://raw.githubusercontent.com/Greelan/AMPTemplates/dev/space-station14server_config.toml",
        "UpdateSourceTarget": "{{$FullBaseDir}}",
        "UpdateSourceArgs": "AMP_server_config.toml",
        "OverwriteExistingFiles": false
    }
]